// Generated by Copilot - September 1, 2025 at 12:00 PM
namespace ServerApp.Data.Models
{
    /// <summary>
    /// Represents a message in the secure communication system
    /// Supports encrypted messaging between users with priority levels
    /// </summary>
    public class Message
    {
        public int Id { get; set; }
        
        /// <summary>
        /// ID of the user sending the message
        /// </summary>
        public int SenderId { get; set; }
        
        /// <summary>
        /// ID of the user receiving the message
        /// </summary>
        public int ReceiverId { get; set; }
        
        /// <summary>
        /// Subject line of the message (max 200 characters)
        /// </summary>
        public string Subject { get; set; } = string.Empty;
        
        /// <summary>
        /// Message content (will be encrypted in storage)
        /// </summary>
        public string Content { get; set; } = string.Empty;
        
        /// <summary>
        /// Priority level of the message
        /// </summary>
        public MessagePriority Priority { get; set; }
        
        /// <summary>
        /// Type of message (text, file, system notification)
        /// </summary>
        public MessageType MessageType { get; set; }
        
        /// <summary>
        /// Whether the message has been read by the recipient
        /// </summary>
        public bool IsRead { get; set; } = false;
        
        /// <summary>
        /// When the message was read (if applicable)
        /// </summary>
        public DateTime? ReadAt { get; set; }
        
        /// <summary>
        /// Whether the message has been archived
        /// </summary>
        public bool IsArchived { get; set; } = false;
        
        /// <summary>
        /// Thread ID for grouping related messages
        /// </summary>
        public string? ThreadId { get; set; }
        
        /// <summary>
        /// ID of the message this is replying to (if applicable)
        /// </summary>
        public int? ReplyToMessageId { get; set; }
        
        /// <summary>
        /// When the message was sent
        /// </summary>
        public DateTime SentAt { get; set; }
        
        /// <summary>
        /// When the message was last updated
        /// </summary>
        public DateTime UpdatedAt { get; set; }
        
        // Navigation properties
        public virtual User Sender { get; set; } = null!;
        public virtual User Receiver { get; set; } = null!;
        public virtual Message? ReplyToMessage { get; set; }
        public virtual ICollection<Message> Replies { get; set; } = new List<Message>();
        public virtual ICollection<MessageAttachment> Attachments { get; set; } = new List<MessageAttachment>();
        public virtual ICollection<MessageReadStatus> ReadStatuses { get; set; } = new List<MessageReadStatus>();
    }
    
    /// <summary>
    /// Priority levels for messages
    /// </summary>
    public enum MessagePriority
    {
        Low = 1,
        Normal = 2,
        High = 3,
        Urgent = 4
    }
    
    /// <summary>
    /// Types of messages supported by the system
    /// </summary>
    public enum MessageType
    {
        Text = 1,
        File = 2,
        System = 3
    }
}
