// Generated by Copilot - September 1, 2025 at 1:25 PM
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;

namespace ServerApp.Data.Models
{
    /// <summary>
    /// Represents a patient with detailed medical and demographic information
    /// </summary>
    public class Patient
    {
        public int Id { get; set; }
        
        /// <summary>
        /// Reference to the User account for authentication and basic info
        /// </summary>
        public int UserId { get; set; }
        public virtual User User { get; set; } = null!;
        
        /// <summary>
        /// Patient's date of birth
        /// </summary>
        public DateTime DateOfBirth { get; set; }
        
        /// <summary>
        /// Patient's gender
        /// </summary>
        public Gender Gender { get; set; }
        
        /// <summary>
        /// Patient's phone number
        /// </summary>
        public string PhoneNumber { get; set; } = string.Empty;
        
        /// <summary>
        /// Emergency contact name
        /// </summary>
        public string EmergencyContactName { get; set; } = string.Empty;
        
        /// <summary>
        /// Emergency contact phone number
        /// </summary>
        public string EmergencyContactPhone { get; set; } = string.Empty;
        
        /// <summary>
        /// Emergency contact relationship
        /// </summary>
        public string EmergencyContactRelationship { get; set; } = string.Empty;
        
        /// <summary>
        /// Patient's current address
        /// </summary>
        public string Address { get; set; } = string.Empty;
        
        /// <summary>
        /// Patient's city
        /// </summary>
        public string City { get; set; } = string.Empty;
        
        /// <summary>
        /// Patient's state/province
        /// </summary>
        public string State { get; set; } = string.Empty;
        
        /// <summary>
        /// Patient's postal code
        /// </summary>
        public string PostalCode { get; set; } = string.Empty;
        
        /// <summary>
        /// Patient's blood type
        /// </summary>
        public string? BloodType { get; set; }
        
        /// <summary>
        /// Known allergies
        /// </summary>
        public string? Allergies { get; set; }
        
        /// <summary>
        /// Current medications
        /// </summary>
        public string? CurrentMedications { get; set; }
        
        /// <summary>
        /// Medical history notes
        /// </summary>
        public string? MedicalHistory { get; set; }
        
        /// <summary>
        /// Current care status
        /// </summary>
        public CareStatus Status { get; set; } = CareStatus.Stable;
        
        /// <summary>
        /// Date of last visit
        /// </summary>
        public DateTime? LastVisitDate { get; set; }
        
        /// <summary>
        /// Primary care manager/provider ID
        /// </summary>
        public int? PrimaryCareManagerId { get; set; }
        public virtual User? PrimaryCareManager { get; set; }
        
        /// <summary>
        /// When the patient record was created
        /// </summary>
        public DateTime CreatedAt { get; set; }
        
        /// <summary>
        /// When the patient record was last updated
        /// </summary>
        public DateTime UpdatedAt { get; set; }
        
        /// <summary>
        /// Navigation properties
        /// </summary>
        public virtual ICollection<PatientProviderRelationship> ProviderRelationships { get; set; } = new List<PatientProviderRelationship>();
        public virtual ICollection<FamilyAccess> FamilyAccess { get; set; } = new List<FamilyAccess>();
        public virtual ICollection<PatientAlert> Alerts { get; set; } = new List<PatientAlert>();
        public virtual ICollection<CareTask> CareTasks { get; set; } = new List<CareTask>();
    }
    
    /// <summary>
    /// Patient gender enumeration
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter))]
    public enum Gender
    {
        Female,
        Male,
        Other,
        PreferNotToSay
    }
    
    /// <summary>
    /// Patient care status enumeration
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter))]
    public enum CareStatus
    {
        Stable,
        Improving,
        Critical,
        UnderReview,
        Discharged
    }
}
