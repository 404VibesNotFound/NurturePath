// Generated by Copilot - September 1, 2025 at 5:08 PM
// Dashboard Page Object Model
import { Page, Locator, expect } from '@playwright/test';
import { BasePage } from './BasePage';
import { config } from '../../config/test-config';

export class DashboardPage extends BasePage {
  // Page elements
  private readonly welcomeMessage: Locator;
  private readonly userGreeting: Locator;
  private readonly navigationMenu: Locator;
  private readonly logoutButton: Locator;
  
  // Dashboard summary cards
  private readonly totalPatientsCard: Locator;
  private readonly appointmentsCard: Locator;
  private readonly alertsCard: Locator;
  private readonly completedTasksCard: Locator;
  
  // Navigation items
  private readonly careCoordinationNav: Locator;
  private readonly messagesNav: Locator;
  private readonly vaccinesNav: Locator;
  private readonly settingsNav: Locator;

  constructor(page: Page) {
    super(page, '/dashboard');
    
    // Initialize locators
    this.welcomeMessage = page.locator(config.selectors.dashboard.welcomeMessage);
    this.userGreeting = page.locator(config.selectors.dashboard.userGreeting);
    this.navigationMenu = page.locator(config.selectors.dashboard.navigationMenu);
    this.logoutButton = page.locator(config.selectors.dashboard.logoutButton);
    
    // Dashboard cards
    this.totalPatientsCard = page.locator(config.selectors.dashboard.totalPatientsCard);
    this.appointmentsCard = page.locator(config.selectors.dashboard.appointmentsCard);
    this.alertsCard = page.locator(config.selectors.dashboard.alertsCard);
    this.completedTasksCard = page.locator('.border-l-4.border-\\[\\#48bb78\\]');
    
    // Navigation items
    this.careCoordinationNav = page.locator(config.selectors.dashboard.careCoordinationNav);
    this.messagesNav = page.locator(config.selectors.dashboard.messagesNav);
    this.vaccinesNav = page.locator(config.selectors.dashboard.vaccinesNav);
    this.settingsNav = page.locator(config.selectors.dashboard.settingsNav);
  }

  /**
   * Verify that the dashboard has loaded correctly
   */
  async verifyDashboardLoaded(): Promise<void> {
    // Wait for main dashboard elements
    await expect(this.welcomeMessage).toBeVisible({ timeout: config.timeouts.assertion });
    
    // Verify page URL contains dashboard
    expect(this.getCurrentUrl()).toContain('/dashboard');
    
    // Verify page title
    await expect(this.page).toHaveTitle(/Dashboard|NurturePath/i);
  }

  /**
   * Verify admin-specific elements are present
   */
  async verifyAdminElements(): Promise<void> {
    // Check for admin-specific dashboard cards
    await expect(this.totalPatientsCard).toBeVisible();
    await expect(this.appointmentsCard).toBeVisible();
    await expect(this.alertsCard).toBeVisible();
    
    // Verify navigation menu is present
    await expect(this.navigationMenu).toBeVisible();
  }

  /**
   * Verify user greeting contains expected information
   */
  async verifyUserGreeting(expectedName?: string): Promise<void> {
    await expect(this.userGreeting).toBeVisible();
    
    if (expectedName) {
      await expect(this.userGreeting).toContainText(expectedName);
    }
    
    // Should contain "Welcome back" text
    await expect(this.userGreeting).toContainText(/Welcome back/i);
  }

  /**
   * Get the welcome message text
   */
  async getWelcomeMessage(): Promise<string> {
    await this.welcomeMessage.waitFor({ state: 'visible' });
    return await this.welcomeMessage.textContent() || '';
  }

  /**
   * Get user greeting text
   */
  async getUserGreeting(): Promise<string> {
    await this.userGreeting.waitFor({ state: 'visible' });
    return await this.userGreeting.textContent() || '';
  }

  /**
   * Navigate to Care Coordination page
   */
  async goToCareCoordination(): Promise<void> {
    await this.careCoordinationNav.click();
    await this.page.waitForURL('**/care-coordination**');
  }

  /**
   * Navigate to Messages page
   */
  async goToMessages(): Promise<void> {
    await this.messagesNav.click();
    await this.page.waitForURL('**/messages**');
  }

  /**
   * Navigate to Vaccines page
   */
  async goToVaccines(): Promise<void> {
    await this.vaccinesNav.click();
    await this.page.waitForURL('**/vaccines**');
  }

  /**
   * Navigate to Settings page
   */
  async goToSettings(): Promise<void> {
    await this.settingsNav.click();
    await this.page.waitForURL('**/settings**');
  }

  /**
   * Perform logout
   */
  async logout(): Promise<void> {
    await this.logoutButton.click();
    await this.page.waitForURL('**/login**');
  }

  /**
   * Get dashboard card data
   */
  async getDashboardCardData(): Promise<{
    totalPatients: string;
    appointmentsToday: string;
    pendingAlerts: string;
    completedTasks: string;
  }> {
    const totalPatientsText = await this.totalPatientsCard.locator('.text-2xl').textContent() || '0';
    const appointmentsText = await this.appointmentsCard.locator('.text-2xl').textContent() || '0';
    const alertsText = await this.alertsCard.locator('.text-2xl').textContent() || '0';
    const tasksText = await this.completedTasksCard.locator('.text-2xl').textContent() || '0';

    return {
      totalPatients: totalPatientsText,
      appointmentsToday: appointmentsText,
      pendingAlerts: alertsText,
      completedTasks: tasksText
    };
  }

  /**
   * Verify dashboard cards show numeric values
   */
  async verifyDashboardCardsHaveData(): Promise<void> {
    const cardData = await this.getDashboardCardData();
    
    // Verify each card shows a numeric value
    expect(cardData.totalPatients).toMatch(/^\d+$/);
    expect(cardData.appointmentsToday).toMatch(/^\d+$/);
    expect(cardData.pendingAlerts).toMatch(/^\d+$/);
    expect(cardData.completedTasks).toMatch(/^\d+$/);
  }

  /**
   * Check if navigation menu items are accessible
   */
  async verifyNavigationAccessible(): Promise<void> {
    const navigationItems = [
      this.careCoordinationNav,
      this.messagesNav,
      this.vaccinesNav,
      this.settingsNav
    ];

    for (const item of navigationItems) {
      await expect(item).toBeVisible();
      await expect(item).toBeEnabled();
    }
  }

  /**
   * Wait for dashboard data to load
   */
  async waitForDashboardDataLoad(): Promise<void> {
    // Wait for loading to complete
    await this.waitForLoadingToComplete();
    
    // Wait for dashboard cards to be populated
    await expect(this.totalPatientsCard.locator('.text-2xl')).not.toBeEmpty();
  }

  /**
   * Verify page responsiveness (check if elements are properly arranged)
   */
  async verifyPageLayout(): Promise<void> {
    // Check if main sections are visible
    await expect(this.welcomeMessage).toBeVisible();
    await expect(this.navigationMenu).toBeVisible();
    
    // Verify cards are in a grid layout
    const cards = this.page.locator('.grid .border-l-4');
    await expect(cards).toHaveCount(4); // Should have 4 dashboard cards
  }
}
